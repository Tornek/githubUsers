{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\AutoComplete.svelte",
    "..\\..\\Modal.svelte",
    "..\\..\\App.svelte",
    "..\\..\\Content.svelte",
    "..\\..\\ListUser.svelte",
    "..\\..\\Token.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport { createEventDispatcher, onDestroy, tick } from 'svelte';\r\n\t\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst regExpEscape = s =>\r\n\t\ts.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\r\n\tconst htmlEscape = s =>\r\n\t\ts.replace(/[\\u00A0-\\u9999<>\"&]/gim, i => `&#${i.charCodeAt(0)};`);\r\n\r\n\t/** `id` attribute of the input element. */\r\n\texport let id = null;\r\n\t/** `name` attribute of the input element. */\r\n\texport let name = null;\r\n\t/** Class to apply to the input element. */\r\n\texport let className = '';\r\n\t/** Placeholder text. */\r\n\texport let placeholder = null;\r\n\t/** Title attribute text. */\r\n\texport let title = null;\r\n\t/** Whether the input is required. */\r\n\texport let required = false;\r\n\t/** Whether the input is disabled. */\r\n\texport let disabled = false;\r\n\t/** Sets the `tabindex` attribute of the input element. */\r\n\texport let tabindex = undefined;\r\n\t/**\r\n\t * Automatically scrolls the component into view.\r\n\t * Can be helpful if the component is at the bottom a scrollable area\r\n\t * and the dropdown ends up off-screen.\r\n\t */\r\n\texport let autoScroll = true;\r\n\t/**\r\n\t * Automatically scrolls to the cursor position in the list.\r\n\t * Turn off if there are performance issues.\r\n\t */\r\n\texport let autoScrollCursor = true;\r\n\r\n\t/**\r\n\t * Gets a list of items that can be completed.\r\n\t * Can return a promise to load data asynchronously.\r\n\t * Returning an existing promise if the list can be cached is recommended.\r\n\t * \r\n\t * Items have to be strings or of the form { key: string, value?: any }.\r\n\t * The key will be searched in and displayed.\r\n\t * The value represents a technical item value that can be extracted via binding\r\n\t * the `value` property.\r\n\t */\r\n\texport let items = () => [];\r\n\r\n\t/** Whether the item dropdown is opened. */\r\n\texport let isOpen = false;\r\n\t/** Currently selected key. See `items` property. */\r\n\texport let key = null;\r\n\t/** Currently selected value. See `items` property. */\r\n\texport let value = null;\r\n\t/** Items matching the search. */\r\n\texport let results = [];\r\n\t/** The search string. */\r\n\texport let search = '';\r\n\t/** Whether the datasource is currently loading. */\r\n\texport let isLoading = false;\r\n\t/** Currently highlighted list item index. */\r\n\texport let cursor = 0;\r\n\t/** Currently highlighted list item. */\r\n\texport let cursorItem = undefined;\r\n\t/** Maximal number of items to show in list at a time. */\r\n\texport let maxItems = undefined;\r\n\t/** Whether the search string has to appear at the start of the item. */\r\n\texport let fromStart = false;\r\n\t/** Whether the search is case-sensitive. */\r\n\texport let caseSensitive = false;\r\n\t/** Minimum number of characters required to trigger a search. */\r\n\texport let minChar = 0;\r\n\t/** Time to wait in milliseconds before triggering a search. */\r\n\texport let debounce = 0;\r\n\t/**\r\n\t * Sets whether suggested items are directly selected upon\r\n\t * arrow up/down while the dropdown is closed.\r\n\t */\r\n\texport let blindSelection = false;\r\n\r\n\t/**\r\n\t * Whether the DOM elements for the list are only created\r\n\t * upon filtering/opening the suggestions dropdown.\r\n\t */\r\n\texport let lazyDropdown = false;\r\n\r\n\t/**\r\n\t * Custom search RegEx.\r\n\t * If set, `fromStart` and `caseSensitive` will not be used.\r\n\t * {@type (search: string) => RegExp}\r\n\t */\r\n\texport let searchRegEx = null;\r\n\r\n\t/**\r\n\t * Custom search function.\r\n\t * If set, `fromStart`, `caseSensitive` and `searchRegEx` will not be used.\r\n\t * {@type (search: string) => (text: string) => {\r\n\t *     matches: boolean,\r\n\t *     highlights: [number, number][], // Array of start and end index tuples\r\n\t * }}\r\n\t */\r\n\texport let searchFunction = null;\r\n\r\n\tlet input = null;\r\n\tlet inputFocused = false;\r\n\tlet dropdownElement = null;\r\n\tlet hasSearched = false;\r\n\r\n\tlet resultListItems = [];\r\n\r\n\t$: searchFlags = caseSensitive ? '' : 'i';\r\n\t$: effectiveSearchRegEx = searchRegEx != null ? searchRegEx\r\n\t\t: fromStart\r\n\t\t\t? q => RegExp('^' + regExpEscape(q), searchFlags)\r\n\t\t\t: q => RegExp(regExpEscape(q), searchFlags);\r\n\t$: effectiveSearchFunction = searchFunction != null\r\n\t\t? searchFunction : defaultSearch;\r\n\r\n\t$: if (cursor > results.length - 1)\r\n\t\tcursor = Math.max(0, results.length - 1);\r\n\t\r\n\t$: if (search.length >= minChar) {\r\n\t\tconst matcher = effectiveSearchFunction(search);\r\n\r\n\t\tresultListItems = results\r\n\t\t\t.map((item, index) => {\r\n\t\t\t\tconst text = typeof item !== 'string' ? item.key : item;\r\n\t\t\t\t\r\n\t\t\t\tconst { matches, highlights } = matcher(text);\r\n\r\n\t\t\t\tlet lastHighlightEnd = 0;\r\n\t\t\t\tconst parts = []\r\n\t\t\t\tfor (const [start, end] of highlights) {\r\n\t\t\t\t\tconst head = text.substring(lastHighlightEnd, start);\r\n\t\t\t\t\tconst highlightText = text.substring(start, end);\r\n\t\t\t\t\tconst highlightClass = 'ac-match';\r\n\t\t\t\t\tconst highlight = `<span class=${highlightClass}>${htmlEscape(highlightText)}</span>`;\r\n\r\n\t\t\t\t\tparts.push(htmlEscape(head), highlight);\r\n\t\t\t\t\tlastHighlightEnd = end;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst tail = text.substring(lastHighlightEnd);\r\n\t\t\t\tparts.push(htmlEscape(tail));\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tkey: text,\r\n\t\t\t\t\tvalue: item.value || item,\r\n\t\t\t\t\tlabel: parts.join(''),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t}\r\n\r\n\t$: cursorItem = results[cursor];\r\n\r\n\tlet debounceHandle = undefined;\r\n\r\n\tonDestroy(() => clearTimeout(debounceHandle));\r\n\r\n\tconst defaultSearch = query => {\r\n\t\tconst regex = effectiveSearchRegEx(query);\r\n\r\n\t\treturn text => {\r\n\t\t\tconst highlights = [];\r\n\r\n\t\t\tlet match;\r\n\t\t\tlet matchCount = 0;\r\n\t\t\twhile ((match = regex.exec(text)) !== null) {\r\n\t\t\t\thighlights.push([match.index, match.index + match[0].length]);\r\n\t\t\t\tmatchCount++;\r\n\r\n\t\t\t\tif (regex.global == false)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tif (matchCount > text.length)\r\n\t\t\t\t\t// Panic\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmatches: highlights.length > 0,\r\n\t\t\t\thighlights,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\t\r\n\tfunction onInput(event) {\r\n\t\tqueueQuery();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction queueQuery() {\r\n\t\tif (search.length >= minChar) {\r\n\t\t\tclearTimeout(debounceHandle);\r\n\t\t\tdebounceHandle = setTimeout(runQuery, debounce);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function runQuery() {\r\n\t\tif (inputFocused)\r\n\t\t\topen();\r\n\r\n\t\tisLoading = true;\r\n\t\tawait filterResults(search);\r\n\t\tisLoading = false;\r\n\t}\r\n\r\n\tasync function filterResults(search) {\r\n\t\thasSearched = true;\r\n\r\n\t\tif (typeof items != 'function')\r\n\t\t\tthrow new Error('Property \"items\" has to be a function.');\r\n\r\n\t\tconst loadedItems = await items();\r\n\t\t\r\n\t\tconst matcher = effectiveSearchFunction(search);\r\n\r\n\t\tresults = loadedItems\r\n\t\t\t.filter(item => {\r\n\t\t\t\tlet text = typeof item === 'string' ?\r\n\t\t\t\t\titem : item.key;\r\n\r\n\t\t\t\tif (typeof text !== 'string')\r\n\t\t\t\t\ttext = '';\r\n\r\n\t\t\t\treturn matcher(text).matches;\r\n\t\t\t})\r\n\t\t\t.slice(0, maxItems);\r\n\r\n\t\tdispatch('filtered', results);\r\n\t}\r\n\r\n\tfunction onKeyDown(event) {\r\n\t\tswitch (event.key)\r\n\t\t{\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tif (cursor < results.length - 1)\r\n\t\t\t\t\tcursor = cursor + 1;\r\n\r\n\t\t\t\tif (blindSelection && isOpen == false)\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tif (cursor > 0)\r\n\t\t\t\t\tcursor =  cursor - 1;\r\n\r\n\t\t\t\tif (blindSelection && isOpen == false)\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Enter':\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tif (isOpen) {\r\n\t\t\t\t\tif (cursor === -1) {\r\n\t\t\t\t\t\tcursor = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tactivate();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Escape':\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tclose();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onFocus(event) {\r\n\t\tinputFocused = true;\r\n\t\tactivate();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onBlur(event) {\r\n\t\tinputFocused = false;\r\n\t\tisOpen = false;\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onClick(event) {\r\n\t\tactivate();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction activate() {\r\n\t\tif (search.length >= minChar)\r\n\t\t\topen();\r\n\r\n\t\tif (hasSearched == false)\r\n\t\t\tqueueQuery();\r\n\t}\r\n\r\n\tfunction onItemClick(event, index) {\r\n\t\tevent.stopPropagation();\r\n\t\tcursor = index;\r\n\r\n\t\tselect();\r\n\t}\r\n\r\n\tfunction open() {\r\n\t\tif (isOpen)\r\n\t\t\treturn;\r\n\r\n\t\tisOpen = true;\r\n\t\tif (results.length > 0 && cursor < 0)\r\n\t\t\tcursor = 0;\r\n\r\n\t\tresults.length > 0\r\n\t}\r\n\r\n\tfunction close() {\r\n\t\tif (isOpen == false)\r\n\t\t\treturn;\r\n\r\n\t\tisOpen = false;\r\n\t}\r\n\r\n\tfunction select() {\r\n\t\tif (cursor <= -1 || results[cursor] == undefined)\r\n\t\t\treturn;\r\n\r\n\t\tconst item = resultListItems[cursor];\r\n\t\tvalue = item.value;\r\n\t\tkey = item.key;\r\n\t\tsearch = key;\r\n\t\tclose();\r\n\r\n\t\tdispatch('item-selected', results[cursor]);\r\n\t}\r\n\r\n\tfunction autoScrollComponent(node, { condition, dropdown }) {\r\n\t\tconst autoScroll = () => {\r\n\t\t\tif (condition() == false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tconst scrollFunction = 'scrollIntoViewIfNeeded' in Element.prototype\r\n\t\t\t\t? Element.prototype.scrollIntoViewIfNeeded\r\n\t\t\t\t: Element.prototype.scrollIntoView;\r\n\r\n\t\t\tconst dropdownNode = dropdown();\r\n\t\t\tif (dropdownNode != null)\r\n\t\t\t\tscrollFunction.call(dropdownNode);\r\n\r\n\t\t\tscrollFunction.call(node);\r\n\t\t};\r\n\r\n\t\tautoScroll();\r\n\r\n\t\treturn {\r\n\t\t\tupdate: async () => {\r\n\t\t\t\tawait tick();\r\n\r\n\t\t\t\tautoScroll();\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n\tfunction autoScrollItem(node, { viewport, condition }) {\r\n\t\tconst autoScroll = () => {\r\n\t\t\tconst viewportNode = viewport();\r\n\t\t\tif (viewportNode == null || condition() == false)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tconst nodeRect = node.getBoundingClientRect();\r\n\t\t\tconst viewportRect = viewportNode.getBoundingClientRect();\r\n\t\t\tif (nodeRect.top < viewportRect.top)\r\n\t\t\t\tviewportNode.scrollTop = node.offsetTop;\r\n\t\t\telse if (nodeRect.bottom > viewportRect.bottom)\r\n\t\t\t\tviewportNode.scrollTop = node.offsetTop -\r\n\t\t\t\t\tviewportNode.clientHeight + nodeRect.height;\r\n\t\t}\r\n\r\n\t\tautoScroll();\r\n\r\n\t\treturn {\r\n\t\t\tupdate: async () => {\r\n\t\t\t\tawait tick();\r\n\r\n\t\t\t\tautoScroll();\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t:global(:root) {\r\n\t\t--ac-input-color: black;\r\n\t\t--ac-input-background: white;\r\n\t\t--ac-input-border: 1px solid hsl(0, 0%, 60%);\r\n\t\t--ac-input-border-radius: 0;\r\n\t\t--ac-input-padding: 3px;\r\n\t\t--ac-input-margin: 0;\r\n\t\t--ac-input-font-size: small;\r\n\t\t--ac-input-font-weight: normal;\r\n\r\n\t\t--ac-dropdown-box-shadow: 0px 2px 5px hsla(0, 0%, 0%, 0.7);\r\n\t\t--ac-dropdown-margin: 0;\r\n\t\t--ac-dropdown-padding: 0;\r\n\t\t--ac-dropdown-border-radius: 0;\r\n\r\n\t\t--ac-loading-color: inherit;\r\n\t\t--ac-loading-background: none;\r\n\t\t--ac-loading-padding: 0;\r\n\t\t--ac-loading-margin: 5px;\r\n\r\n\t\t--ac-result-color: inherit;\r\n\t\t--ac-result-background: none;\r\n\t\t--ac-result-border: none;\r\n\t\t--ac-result-margin: 0;\r\n\t\t--ac-result-padding: 0.2em 0.5em;\r\n\t\t--ac-result-border-radius: 0;\r\n\r\n\t\t--ac-result-highlighted-color: inherit;\r\n\t\t--ac-result-highlighted-background: #dbdbdb;\r\n\r\n\t\t--ac-result-match-color: inherit;\r\n\t\t--ac-result-match-background: none;\r\n\t\t--ac-result-match-border-radius: 0;\r\n\t\t--ac-result-match-font-weight: bold;\r\n\t\t--ac-result-match-font-style: inherit;\r\n\t}\r\n\r\n\t* {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.autocomplete {\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.autocomplete-input {\r\n\t\twidth: 100%;\r\n\t\tcolor: var(--ac-input-color);\r\n\t\tbackground: var(--ac-input-background);\r\n\t\tborder: var(--ac-input-border);\r\n\t\tborder-radius: var(--ac-input-border-radius);\r\n\t\tpadding: var(--ac-input-padding);\r\n\t\tmargin: var(--ac-input-margin);\r\n\t\tfont-size: var(--ac-input-font-size);\r\n\t\tfont-weight: var(--ac-input-font-weight);\r\n\t}\r\n\r\n\t.autocomplete-results-dropdown {\r\n\t\tposition: absolute;\r\n\t\tz-index: 100;\r\n\t\tmax-height: 14.5em;\r\n\t\toverflow: auto;\r\n\t\twidth: 100%;\r\n\r\n\t\tcolor: var(--ac-dropdown-color, var(--ac-input-color));\r\n\t\tbackground: var(--ac-dropdown-background, var(--ac-input-background));\r\n\t\tbox-shadow: var(--ac-dropdown-box-shadow);\r\n\t\tmargin: var(--ac-dropdown-margin);\r\n\t\tpadding: var(--ac-dropdown-padding);\r\n\t\tborder-radius: var(--ac-dropdown-border-radius);\r\n\t}\r\n\r\n\t.hidden {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t.autocomplete-loading {\r\n\t\tcolor: var(--ac-loading-color);\r\n\t\tbackground: var(--ac-loading-background);\r\n\t\tpadding: var(--ac-loading-padding);\r\n\t\tmargin: var(--ac-loading-margin);\r\n\t}\r\n\r\n\t.autocomplete-results-list {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.autocomplete-result {\r\n\t\tcolor: var(--ac-result-color);\r\n\t\tbackground: var(--ac-result-background);\r\n\t\tborder: var(--ac-result-border);\r\n\t\tmargin: var(--ac-result-margin);\r\n\t\tpadding: var(--ac-result-padding);\r\n\t\tborder-radius: var(--ac-result-border-radius);\r\n\r\n\t\tlist-style: none;\r\n\t\ttext-align: left;\r\n\t\tcursor: pointer;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.autocomplete-result.ac-highlighted {\r\n\t\tcolor: var(--ac-result-highlighted-color, var(--ac-result-color));\r\n\t\tbackground: var(--ac-result-highlighted-background, var(--ac-result-background));\r\n\t\tborder: var(--ac-result-highlighted-border, var(--ac-result-border));\r\n\t\tmargin: var(--ac-result-highlighted-margin, var(--ac-result-margin));\r\n\t\tpadding: var(--ac-result-highlighted-padding, var(--ac-result-padding));\r\n\t\tborder-radius: var(--ac-result-highlighted-border-radius, var(--ac-result-border-radius));\r\n\t}\r\n\r\n\t.autocomplete-result :global(.ac-match) {\r\n\t\tcolor: var(--ac-result-match-color);\r\n\t\tbackground: var(--ac-result-match-background);\r\n\t\tfont-weight: var(--ac-result-match-font-weight);\r\n\t\tfont-style: var(--ac-result-match-font-style);\r\n\t\tborder-radius: var(--ac-result-match-border-radius);\r\n\t}\r\n</style>\r\n\r\n<svelte:window on:click=\"{() => close()}\" />\r\n\r\n<div class=\"autocomplete\"\r\n\ton:click=\"{event => event.stopPropagation()}\"\r\n\tuse:autoScrollComponent={{\r\n\t\tcondition: () => autoScroll && isOpen,\r\n\t\tdropdown: () => dropdownElement,\r\n\t\tisOpen,\r\n\t\tresults\r\n\t}}>\r\n\t<input bind:this={input} type=\"text\"\r\n\t\t{id} {name}\r\n\t\tclass=\"autocomplete-input {className}\"\r\n\t\t{placeholder} {title}\r\n\t\t{required} {disabled} {tabindex}\r\n\t\tautocomplete={name}\r\n\t\tbind:value={search}\r\n\t\ton:input={onInput}\r\n\t\ton:focus={onFocus}\r\n\t\ton:blur={onBlur}\r\n\t\ton:click={onClick}\r\n\t\ton:keydown={onKeyDown}>\r\n\r\n\t{#if lazyDropdown == false || isOpen}\r\n\t\t<div bind:this={dropdownElement} \r\n\t\t\tclass=\"autocomplete-results-dropdown\"\r\n\t\t\tclass:hidden={!isOpen}>\r\n\t\t\t{#if isLoading}\r\n\t\t\t\t<div class=\"autocomplete-loading\">\r\n\t\t\t\t\t<slot name=\"loading\">Loading data...</slot>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\r\n\t\t\t<ul class=\"autocomplete-results-list\"\r\n\t\t\t\tclass:hidden={isLoading}>\r\n\t\t\t\t{#each resultListItems as result, index (result.key)}\r\n\t\t\t\t\t<li on:mousedown={e => onItemClick(e, index)}\r\n\t\t\t\t\t\tclass=\"autocomplete-result\"\r\n\t\t\t\t\t\tclass:ac-highlighted={index === cursor}\r\n\t\t\t\t\t\ton:mousemove={() => cursor = index}\r\n\t\t\t\t\t\tuse:autoScrollItem={{\r\n\t\t\t\t\t\t\tviewport: () => dropdownElement,\r\n\t\t\t\t\t\t\tcondition: () => autoScrollCursor && index === cursor,\r\n\t\t\t\t\t\t\tisOpen,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<slot name=\"template\" {result}>\r\n\t\t\t\t\t\t\t{@html result.label}\r\n\t\t\t\t\t\t</slot>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t{/each}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t{/if}\r\n</div>",
    "<script>\n  import { createEventDispatcher, onDestroy } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n  const dispatchClose = () => {\n    dispatch(\"close\");\n  };\n\n  let modal;\n\n  const handleKeydown = e => {\n    if (e.key === \"Escape\") {\n      dispatch(\"close\");\n      return;\n    }\n\n    if (e.key === \"Tab\") {\n      const nodes = modal.querySelectorAll(\"*\");\n      const tabbable = Array.from(nodes).filter(n => n.tabIndex >= 0);\n\n      let index = tabbable.indexOf(document.activeElement);\n      if (index === -1 && e.shiftKey) index = 0;\n\n      index += tabbable.length + (e.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      tabbable[index].focus();\n      e.preventDefault();\n    }\n  };\n\n  const previouslyFocused =\n    typeof document !== \"undefined\" && document.activeElement;\n\n  if (previouslyFocused) {\n    onDestroy(() => {\n      previouslyFocused.focus();\n    });\n  }\n</script>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  .modal {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n<div class=\"modal-background\" on:click={dispatchClose} />\n\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\" bind:this={modal}>\n  <slot />\n</div>\n",
    "<script>\n    import { AutoComplete } from '@brunnerh/autocomplete';\n    import Content from './Components/Content/Content.svelte';\n    import Token from './Components/Token/Token.svelte';\n    import ListUser from './Components/ListUser/ListUser.svelte';\n\timport Modal from \"modal-overlay\";\n    import { findUsers } from './Services/findUsers'\n    import { getUserRepositories } from './Services/getUserRepositories'\n\t\n    const modal = {\n    \tdisplay: false,\n    \tcloseModal: () => {\n            modal.display = false\n        },\n    \topenModal: () => {\n            modal.display = true\n        },\n        content: '',\n        header: 'Error'\n    }\n    let selectedUser\n    \n    async function getItem() {\n    \treturn findUsers(document.getElementById('username').value)\n    }\n    async function onSelected({detail}) {\n    \tselectedUser = detail\n        const result = await getUserRepositories(detail.key)\n        \n        if(result.success){\n            modal.header = false\n            modal.content = `<ol>${result.data.map((repo) => {\n            \treturn `<li>\n\t<a href=\"${repo.html_url}\" target=\"_blank\"><b>${repo.name}</b> ${repo.language ? '(' + repo.language + ')' : ''}</a>\n\t<div>${repo.description || ''}</div>\n\t<div>\n\t\t<b>Created at: </b> ${new Date(Date.parse(repo.created_at)).toLocaleDateString()}\n\t\t<b>Updated at: </b> ${new Date(Date.parse(repo.updated_at)).toLocaleDateString()}\n\t</div>\n\t<div><b>forks:</b> ${repo.forks}</div>\n\t<div><b>watchers:</b> ${repo.watchers}</div>\n</li>`\n            }).join('')}</ol>`\n        } else {\n\t\t\tmodal.header = 'Error'\n\t\t\tmodal.content = `User ${detail.key} not found`\n        }\n        modal.openModal()\n    }\n</script> \n \n<Content>\n\t<Token />\n\t<div class=\"searchbar\">\n\t\t<label class=\"searchbar__input\">\n\t        Github username\n\t        <AutoComplete \n\t\t        id=\"username\" \n\t\t        placeholder=\"Tornek\"\n\t\t        debounce=\"500\"\n\t\t        items={getItem}\n\t\t        on:item-selected={onSelected}\n\t\t        let:result\n\t        >\n\t\t        <!-- Renders item with index prefix and value in parentheses on a second line. -->\n                <div slot=\"template\">\n                    {result.index + 1}. {@html result.label}\n                    <ListUser result={result} />\n                </div>\n            </AutoComplete>\n\t    </label>\n    </div>\n</Content>\n{#if modal.display}\n\t<Modal on:close=\"{modal.closeModal}\">\n\t\t{#if modal.header}\n\t\t\t<div class=\"modal__header\">{@html modal.header}</div>\n\t\t{:else}\n\t\t\t<div class=\"modal__header\"><ListUser result={selectedUser} /></div>\n\t\t{/if}\n\t\t{#if modal.content}\n\t\t\t{@html modal.content}\n\t\t{/if}\n\t</Modal>\n{/if}\n\n<style>\n.searchbar {\n\tdisplay: flex;\n\tflex-direction: row;\n}\n.searchbar :global(#username) {\n    padding: 0.4em 1em; \n}\n.searchbar {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: flex-end;\n}\n.searchbar__input {\n    flex: 1 1 auto;\n    padding-right: 2px;\n}\n.modal__header {\n\tfont-size: 1.6em;\n\tpadding-bottom: 15px;\n\tmargin-bottom: 15px;\n\tborder-bottom: 1px solid #8e8a8a;\n}\n</style>",
    "<main>\n<slot></slot>\n</main>\n\n<style>\nmain {\n\tdisplay: block;\n\tmargin: auto;\n\tmax-width: 670px;\n}\n</style>",
    "<script>\n\texport let result\n</script>\n\n<div class=\"user\">\n    <img src=\"{result.value.image}\" class=\"avatar\" alt=\"{result.key} avatar\" />\n    <div>\n        {#if result.value.name}\n            {result.value.name}\n        {:else}\n            name not filled\n        {/if}\n        <div>\n            <b>Followers</b>: {result.value.followers}\n            <b>Following</b>: {result.value.following}\n        </div>\n    </div>\n</div>\n\n<style>\n.avatar {\n\twidth: 30px;\n\theight: 30px;\n\tobject-fit: contain;\n\tmargin-right: 5px;\n    margin-top: 5px;\n}\n.user {\n\tdisplay: flex;\n\talign-items: end;\n    font-size: 14px;\n}\n</style>",
    "<script context='module'>\n\texport function getFetchHeaders() {\n\t\tconst password = document.getElementById('token').value\n\t\tconst headers = new Headers()\n\t\t\n\t\tif(password.length > 0) {\n\t\t\theaders.set('Authorization', 'token ' + password);\n\t\t}\n\t\treturn headers\n\t}\n</script>\n<div>\n\t<label>\n\t\tВведите гитхаб токен, что бы избавиться от ограничения в 60 запросов, иначе все поломается\n\t\t<input id=\"token\" value=\"\">\n\t</label>\n</div>\n\n<style>\n\t#token {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}