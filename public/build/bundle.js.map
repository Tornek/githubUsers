{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@brunnerh/autocomplete/src/AutoComplete.svelte","../../src/Components/Token/Token.svelte","../../src/Components/ListUser/ListUser.svelte","../../node_modules/modal-overlay/src/Modal.svelte","../../src/Services/findUsers.js","../../src/App.svelte","../../src/Services/getUserRepositories.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n\timport { createEventDispatcher, onDestroy, tick } from 'svelte';\r\n\t\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst regExpEscape = s =>\r\n\t\ts.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\r\n\tconst htmlEscape = s =>\r\n\t\ts.replace(/[\\u00A0-\\u9999<>\"&]/gim, i => `&#${i.charCodeAt(0)};`);\r\n\r\n\t/** `id` attribute of the input element. */\r\n\texport let id = null;\r\n\t/** `name` attribute of the input element. */\r\n\texport let name = null;\r\n\t/** Class to apply to the input element. */\r\n\texport let className = '';\r\n\t/** Placeholder text. */\r\n\texport let placeholder = null;\r\n\t/** Title attribute text. */\r\n\texport let title = null;\r\n\t/** Whether the input is required. */\r\n\texport let required = false;\r\n\t/** Whether the input is disabled. */\r\n\texport let disabled = false;\r\n\t/** Sets the `tabindex` attribute of the input element. */\r\n\texport let tabindex = undefined;\r\n\t/**\r\n\t * Automatically scrolls the component into view.\r\n\t * Can be helpful if the component is at the bottom a scrollable area\r\n\t * and the dropdown ends up off-screen.\r\n\t */\r\n\texport let autoScroll = true;\r\n\t/**\r\n\t * Automatically scrolls to the cursor position in the list.\r\n\t * Turn off if there are performance issues.\r\n\t */\r\n\texport let autoScrollCursor = true;\r\n\r\n\t/**\r\n\t * Gets a list of items that can be completed.\r\n\t * Can return a promise to load data asynchronously.\r\n\t * Returning an existing promise if the list can be cached is recommended.\r\n\t * \r\n\t * Items have to be strings or of the form { key: string, value?: any }.\r\n\t * The key will be searched in and displayed.\r\n\t * The value represents a technical item value that can be extracted via binding\r\n\t * the `value` property.\r\n\t */\r\n\texport let items = () => [];\r\n\r\n\t/** Whether the item dropdown is opened. */\r\n\texport let isOpen = false;\r\n\t/** Currently selected key. See `items` property. */\r\n\texport let key = null;\r\n\t/** Currently selected value. See `items` property. */\r\n\texport let value = null;\r\n\t/** Items matching the search. */\r\n\texport let results = [];\r\n\t/** The search string. */\r\n\texport let search = '';\r\n\t/** Whether the datasource is currently loading. */\r\n\texport let isLoading = false;\r\n\t/** Currently highlighted list item index. */\r\n\texport let cursor = 0;\r\n\t/** Currently highlighted list item. */\r\n\texport let cursorItem = undefined;\r\n\t/** Maximal number of items to show in list at a time. */\r\n\texport let maxItems = undefined;\r\n\t/** Whether the search string has to appear at the start of the item. */\r\n\texport let fromStart = false;\r\n\t/** Whether the search is case-sensitive. */\r\n\texport let caseSensitive = false;\r\n\t/** Minimum number of characters required to trigger a search. */\r\n\texport let minChar = 0;\r\n\t/** Time to wait in milliseconds before triggering a search. */\r\n\texport let debounce = 0;\r\n\t/**\r\n\t * Sets whether suggested items are directly selected upon\r\n\t * arrow up/down while the dropdown is closed.\r\n\t */\r\n\texport let blindSelection = false;\r\n\r\n\t/**\r\n\t * Whether the DOM elements for the list are only created\r\n\t * upon filtering/opening the suggestions dropdown.\r\n\t */\r\n\texport let lazyDropdown = false;\r\n\r\n\t/**\r\n\t * Custom search RegEx.\r\n\t * If set, `fromStart` and `caseSensitive` will not be used.\r\n\t * {@type (search: string) => RegExp}\r\n\t */\r\n\texport let searchRegEx = null;\r\n\r\n\t/**\r\n\t * Custom search function.\r\n\t * If set, `fromStart`, `caseSensitive` and `searchRegEx` will not be used.\r\n\t * {@type (search: string) => (text: string) => {\r\n\t *     matches: boolean,\r\n\t *     highlights: [number, number][], // Array of start and end index tuples\r\n\t * }}\r\n\t */\r\n\texport let searchFunction = null;\r\n\r\n\tlet input = null;\r\n\tlet inputFocused = false;\r\n\tlet dropdownElement = null;\r\n\tlet hasSearched = false;\r\n\r\n\tlet resultListItems = [];\r\n\r\n\t$: searchFlags = caseSensitive ? '' : 'i';\r\n\t$: effectiveSearchRegEx = searchRegEx != null ? searchRegEx\r\n\t\t: fromStart\r\n\t\t\t? q => RegExp('^' + regExpEscape(q), searchFlags)\r\n\t\t\t: q => RegExp(regExpEscape(q), searchFlags);\r\n\t$: effectiveSearchFunction = searchFunction != null\r\n\t\t? searchFunction : defaultSearch;\r\n\r\n\t$: if (cursor > results.length - 1)\r\n\t\tcursor = Math.max(0, results.length - 1);\r\n\t\r\n\t$: if (search.length >= minChar) {\r\n\t\tconst matcher = effectiveSearchFunction(search);\r\n\r\n\t\tresultListItems = results\r\n\t\t\t.map((item, index) => {\r\n\t\t\t\tconst text = typeof item !== 'string' ? item.key : item;\r\n\t\t\t\t\r\n\t\t\t\tconst { matches, highlights } = matcher(text);\r\n\r\n\t\t\t\tlet lastHighlightEnd = 0;\r\n\t\t\t\tconst parts = []\r\n\t\t\t\tfor (const [start, end] of highlights) {\r\n\t\t\t\t\tconst head = text.substring(lastHighlightEnd, start);\r\n\t\t\t\t\tconst highlightText = text.substring(start, end);\r\n\t\t\t\t\tconst highlightClass = 'ac-match';\r\n\t\t\t\t\tconst highlight = `<span class=${highlightClass}>${htmlEscape(highlightText)}</span>`;\r\n\r\n\t\t\t\t\tparts.push(htmlEscape(head), highlight);\r\n\t\t\t\t\tlastHighlightEnd = end;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst tail = text.substring(lastHighlightEnd);\r\n\t\t\t\tparts.push(htmlEscape(tail));\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tkey: text,\r\n\t\t\t\t\tvalue: item.value || item,\r\n\t\t\t\t\tlabel: parts.join(''),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t}\r\n\r\n\t$: cursorItem = results[cursor];\r\n\r\n\tlet debounceHandle = undefined;\r\n\r\n\tonDestroy(() => clearTimeout(debounceHandle));\r\n\r\n\tconst defaultSearch = query => {\r\n\t\tconst regex = effectiveSearchRegEx(query);\r\n\r\n\t\treturn text => {\r\n\t\t\tconst highlights = [];\r\n\r\n\t\t\tlet match;\r\n\t\t\tlet matchCount = 0;\r\n\t\t\twhile ((match = regex.exec(text)) !== null) {\r\n\t\t\t\thighlights.push([match.index, match.index + match[0].length]);\r\n\t\t\t\tmatchCount++;\r\n\r\n\t\t\t\tif (regex.global == false)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tif (matchCount > text.length)\r\n\t\t\t\t\t// Panic\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmatches: highlights.length > 0,\r\n\t\t\t\thighlights,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\t\r\n\tfunction onInput(event) {\r\n\t\tqueueQuery();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction queueQuery() {\r\n\t\tif (search.length >= minChar) {\r\n\t\t\tclearTimeout(debounceHandle);\r\n\t\t\tdebounceHandle = setTimeout(runQuery, debounce);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function runQuery() {\r\n\t\tif (inputFocused)\r\n\t\t\topen();\r\n\r\n\t\tisLoading = true;\r\n\t\tawait filterResults(search);\r\n\t\tisLoading = false;\r\n\t}\r\n\r\n\tasync function filterResults(search) {\r\n\t\thasSearched = true;\r\n\r\n\t\tif (typeof items != 'function')\r\n\t\t\tthrow new Error('Property \"items\" has to be a function.');\r\n\r\n\t\tconst loadedItems = await items();\r\n\t\t\r\n\t\tconst matcher = effectiveSearchFunction(search);\r\n\r\n\t\tresults = loadedItems\r\n\t\t\t.filter(item => {\r\n\t\t\t\tlet text = typeof item === 'string' ?\r\n\t\t\t\t\titem : item.key;\r\n\r\n\t\t\t\tif (typeof text !== 'string')\r\n\t\t\t\t\ttext = '';\r\n\r\n\t\t\t\treturn matcher(text).matches;\r\n\t\t\t})\r\n\t\t\t.slice(0, maxItems);\r\n\r\n\t\tdispatch('filtered', results);\r\n\t}\r\n\r\n\tfunction onKeyDown(event) {\r\n\t\tswitch (event.key)\r\n\t\t{\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tif (cursor < results.length - 1)\r\n\t\t\t\t\tcursor = cursor + 1;\r\n\r\n\t\t\t\tif (blindSelection && isOpen == false)\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tif (cursor > 0)\r\n\t\t\t\t\tcursor =  cursor - 1;\r\n\r\n\t\t\t\tif (blindSelection && isOpen == false)\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Enter':\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tif (isOpen) {\r\n\t\t\t\t\tif (cursor === -1) {\r\n\t\t\t\t\t\tcursor = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselect(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tactivate();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Escape':\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tclose();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onFocus(event) {\r\n\t\tinputFocused = true;\r\n\t\tactivate();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onBlur(event) {\r\n\t\tinputFocused = false;\r\n\t\tisOpen = false;\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction onClick(event) {\r\n\t\tactivate();\r\n\r\n\t\tdispatch(event.type, event);\r\n\t}\r\n\r\n\tfunction activate() {\r\n\t\tif (search.length >= minChar)\r\n\t\t\topen();\r\n\r\n\t\tif (hasSearched == false)\r\n\t\t\tqueueQuery();\r\n\t}\r\n\r\n\tfunction onItemClick(event, index) {\r\n\t\tevent.stopPropagation();\r\n\t\tcursor = index;\r\n\r\n\t\tselect();\r\n\t}\r\n\r\n\tfunction open() {\r\n\t\tif (isOpen)\r\n\t\t\treturn;\r\n\r\n\t\tisOpen = true;\r\n\t\tif (results.length > 0 && cursor < 0)\r\n\t\t\tcursor = 0;\r\n\r\n\t\tresults.length > 0\r\n\t}\r\n\r\n\tfunction close() {\r\n\t\tif (isOpen == false)\r\n\t\t\treturn;\r\n\r\n\t\tisOpen = false;\r\n\t}\r\n\r\n\tfunction select() {\r\n\t\tif (cursor <= -1 || results[cursor] == undefined)\r\n\t\t\treturn;\r\n\r\n\t\tconst item = resultListItems[cursor];\r\n\t\tvalue = item.value;\r\n\t\tkey = item.key;\r\n\t\tsearch = key;\r\n\t\tclose();\r\n\r\n\t\tdispatch('item-selected', results[cursor]);\r\n\t}\r\n\r\n\tfunction autoScrollComponent(node, { condition, dropdown }) {\r\n\t\tconst autoScroll = () => {\r\n\t\t\tif (condition() == false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tconst scrollFunction = 'scrollIntoViewIfNeeded' in Element.prototype\r\n\t\t\t\t? Element.prototype.scrollIntoViewIfNeeded\r\n\t\t\t\t: Element.prototype.scrollIntoView;\r\n\r\n\t\t\tconst dropdownNode = dropdown();\r\n\t\t\tif (dropdownNode != null)\r\n\t\t\t\tscrollFunction.call(dropdownNode);\r\n\r\n\t\t\tscrollFunction.call(node);\r\n\t\t};\r\n\r\n\t\tautoScroll();\r\n\r\n\t\treturn {\r\n\t\t\tupdate: async () => {\r\n\t\t\t\tawait tick();\r\n\r\n\t\t\t\tautoScroll();\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n\tfunction autoScrollItem(node, { viewport, condition }) {\r\n\t\tconst autoScroll = () => {\r\n\t\t\tconst viewportNode = viewport();\r\n\t\t\tif (viewportNode == null || condition() == false)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tconst nodeRect = node.getBoundingClientRect();\r\n\t\t\tconst viewportRect = viewportNode.getBoundingClientRect();\r\n\t\t\tif (nodeRect.top < viewportRect.top)\r\n\t\t\t\tviewportNode.scrollTop = node.offsetTop;\r\n\t\t\telse if (nodeRect.bottom > viewportRect.bottom)\r\n\t\t\t\tviewportNode.scrollTop = node.offsetTop -\r\n\t\t\t\t\tviewportNode.clientHeight + nodeRect.height;\r\n\t\t}\r\n\r\n\t\tautoScroll();\r\n\r\n\t\treturn {\r\n\t\t\tupdate: async () => {\r\n\t\t\t\tawait tick();\r\n\r\n\t\t\t\tautoScroll();\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t:global(:root) {\r\n\t\t--ac-input-color: black;\r\n\t\t--ac-input-background: white;\r\n\t\t--ac-input-border: 1px solid hsl(0, 0%, 60%);\r\n\t\t--ac-input-border-radius: 0;\r\n\t\t--ac-input-padding: 3px;\r\n\t\t--ac-input-margin: 0;\r\n\t\t--ac-input-font-size: small;\r\n\t\t--ac-input-font-weight: normal;\r\n\r\n\t\t--ac-dropdown-box-shadow: 0px 2px 5px hsla(0, 0%, 0%, 0.7);\r\n\t\t--ac-dropdown-margin: 0;\r\n\t\t--ac-dropdown-padding: 0;\r\n\t\t--ac-dropdown-border-radius: 0;\r\n\r\n\t\t--ac-loading-color: inherit;\r\n\t\t--ac-loading-background: none;\r\n\t\t--ac-loading-padding: 0;\r\n\t\t--ac-loading-margin: 5px;\r\n\r\n\t\t--ac-result-color: inherit;\r\n\t\t--ac-result-background: none;\r\n\t\t--ac-result-border: none;\r\n\t\t--ac-result-margin: 0;\r\n\t\t--ac-result-padding: 0.2em 0.5em;\r\n\t\t--ac-result-border-radius: 0;\r\n\r\n\t\t--ac-result-highlighted-color: inherit;\r\n\t\t--ac-result-highlighted-background: #dbdbdb;\r\n\r\n\t\t--ac-result-match-color: inherit;\r\n\t\t--ac-result-match-background: none;\r\n\t\t--ac-result-match-border-radius: 0;\r\n\t\t--ac-result-match-font-weight: bold;\r\n\t\t--ac-result-match-font-style: inherit;\r\n\t}\r\n\r\n\t* {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.autocomplete {\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.autocomplete-input {\r\n\t\twidth: 100%;\r\n\t\tcolor: var(--ac-input-color);\r\n\t\tbackground: var(--ac-input-background);\r\n\t\tborder: var(--ac-input-border);\r\n\t\tborder-radius: var(--ac-input-border-radius);\r\n\t\tpadding: var(--ac-input-padding);\r\n\t\tmargin: var(--ac-input-margin);\r\n\t\tfont-size: var(--ac-input-font-size);\r\n\t\tfont-weight: var(--ac-input-font-weight);\r\n\t}\r\n\r\n\t.autocomplete-results-dropdown {\r\n\t\tposition: absolute;\r\n\t\tz-index: 100;\r\n\t\tmax-height: 14.5em;\r\n\t\toverflow: auto;\r\n\t\twidth: 100%;\r\n\r\n\t\tcolor: var(--ac-dropdown-color, var(--ac-input-color));\r\n\t\tbackground: var(--ac-dropdown-background, var(--ac-input-background));\r\n\t\tbox-shadow: var(--ac-dropdown-box-shadow);\r\n\t\tmargin: var(--ac-dropdown-margin);\r\n\t\tpadding: var(--ac-dropdown-padding);\r\n\t\tborder-radius: var(--ac-dropdown-border-radius);\r\n\t}\r\n\r\n\t.hidden {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t.autocomplete-loading {\r\n\t\tcolor: var(--ac-loading-color);\r\n\t\tbackground: var(--ac-loading-background);\r\n\t\tpadding: var(--ac-loading-padding);\r\n\t\tmargin: var(--ac-loading-margin);\r\n\t}\r\n\r\n\t.autocomplete-results-list {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.autocomplete-result {\r\n\t\tcolor: var(--ac-result-color);\r\n\t\tbackground: var(--ac-result-background);\r\n\t\tborder: var(--ac-result-border);\r\n\t\tmargin: var(--ac-result-margin);\r\n\t\tpadding: var(--ac-result-padding);\r\n\t\tborder-radius: var(--ac-result-border-radius);\r\n\r\n\t\tlist-style: none;\r\n\t\ttext-align: left;\r\n\t\tcursor: pointer;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.autocomplete-result.ac-highlighted {\r\n\t\tcolor: var(--ac-result-highlighted-color, var(--ac-result-color));\r\n\t\tbackground: var(--ac-result-highlighted-background, var(--ac-result-background));\r\n\t\tborder: var(--ac-result-highlighted-border, var(--ac-result-border));\r\n\t\tmargin: var(--ac-result-highlighted-margin, var(--ac-result-margin));\r\n\t\tpadding: var(--ac-result-highlighted-padding, var(--ac-result-padding));\r\n\t\tborder-radius: var(--ac-result-highlighted-border-radius, var(--ac-result-border-radius));\r\n\t}\r\n\r\n\t.autocomplete-result :global(.ac-match) {\r\n\t\tcolor: var(--ac-result-match-color);\r\n\t\tbackground: var(--ac-result-match-background);\r\n\t\tfont-weight: var(--ac-result-match-font-weight);\r\n\t\tfont-style: var(--ac-result-match-font-style);\r\n\t\tborder-radius: var(--ac-result-match-border-radius);\r\n\t}\r\n</style>\r\n\r\n<svelte:window on:click=\"{() => close()}\" />\r\n\r\n<div class=\"autocomplete\"\r\n\ton:click=\"{event => event.stopPropagation()}\"\r\n\tuse:autoScrollComponent={{\r\n\t\tcondition: () => autoScroll && isOpen,\r\n\t\tdropdown: () => dropdownElement,\r\n\t\tisOpen,\r\n\t\tresults\r\n\t}}>\r\n\t<input bind:this={input} type=\"text\"\r\n\t\t{id} {name}\r\n\t\tclass=\"autocomplete-input {className}\"\r\n\t\t{placeholder} {title}\r\n\t\t{required} {disabled} {tabindex}\r\n\t\tautocomplete={name}\r\n\t\tbind:value={search}\r\n\t\ton:input={onInput}\r\n\t\ton:focus={onFocus}\r\n\t\ton:blur={onBlur}\r\n\t\ton:click={onClick}\r\n\t\ton:keydown={onKeyDown}>\r\n\r\n\t{#if lazyDropdown == false || isOpen}\r\n\t\t<div bind:this={dropdownElement} \r\n\t\t\tclass=\"autocomplete-results-dropdown\"\r\n\t\t\tclass:hidden={!isOpen}>\r\n\t\t\t{#if isLoading}\r\n\t\t\t\t<div class=\"autocomplete-loading\">\r\n\t\t\t\t\t<slot name=\"loading\">Loading data...</slot>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\r\n\t\t\t<ul class=\"autocomplete-results-list\"\r\n\t\t\t\tclass:hidden={isLoading}>\r\n\t\t\t\t{#each resultListItems as result, index (result.key)}\r\n\t\t\t\t\t<li on:mousedown={e => onItemClick(e, index)}\r\n\t\t\t\t\t\tclass=\"autocomplete-result\"\r\n\t\t\t\t\t\tclass:ac-highlighted={index === cursor}\r\n\t\t\t\t\t\ton:mousemove={() => cursor = index}\r\n\t\t\t\t\t\tuse:autoScrollItem={{\r\n\t\t\t\t\t\t\tviewport: () => dropdownElement,\r\n\t\t\t\t\t\t\tcondition: () => autoScrollCursor && index === cursor,\r\n\t\t\t\t\t\t\tisOpen,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<slot name=\"template\" {result}>\r\n\t\t\t\t\t\t\t{@html result.label}\r\n\t\t\t\t\t\t</slot>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t{/each}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t{/if}\r\n</div>","<script context='module'>\n\texport function getFetchHeaders() {\n\t\tconst password = document.getElementById('token').value\n\t\tconst headers = new Headers()\n\t\t\n\t\tif(password.length > 0) {\n\t\t\theaders.set('Authorization', 'token ' + password);\n\t\t}\n\t\treturn headers\n\t}\n</script>\n<div>\n\t<label>\n\t\tВведите гитхаб токен, что бы избавиться от ограничения в 60 запросов, иначе все поломается\n\t\t<input id=\"token\" value=\"\">\n\t</label>\n</div>\n\n<style>\n\t#token {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t}\n</style>","<script>\n\texport let result\n</script>\n\n<div class=\"user\">\n    <img src=\"{result.value.image}\" class=\"avatar\" alt=\"{result.key} avatar\" />\n    <div>\n        {#if result.value.name}\n            {result.value.name}\n        {:else}\n            name not filled\n        {/if}\n        <div>\n            <b>Followers</b>: {result.value.followers}\n            <b>Following</b>: {result.value.following}\n        </div>\n    </div>\n</div>\n\n<style>\n.avatar {\n\twidth: 30px;\n\theight: 30px;\n\tobject-fit: contain;\n\tmargin-right: 5px;\n    margin-top: 5px;\n}\n.user {\n\tdisplay: flex;\n\talign-items: end;\n    font-size: 14px;\n}\n</style>","<script>\n  import { createEventDispatcher, onDestroy } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n  const dispatchClose = () => {\n    dispatch(\"close\");\n  };\n\n  let modal;\n\n  const handleKeydown = e => {\n    if (e.key === \"Escape\") {\n      dispatch(\"close\");\n      return;\n    }\n\n    if (e.key === \"Tab\") {\n      const nodes = modal.querySelectorAll(\"*\");\n      const tabbable = Array.from(nodes).filter(n => n.tabIndex >= 0);\n\n      let index = tabbable.indexOf(document.activeElement);\n      if (index === -1 && e.shiftKey) index = 0;\n\n      index += tabbable.length + (e.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      tabbable[index].focus();\n      e.preventDefault();\n    }\n  };\n\n  const previouslyFocused =\n    typeof document !== \"undefined\" && document.activeElement;\n\n  if (previouslyFocused) {\n    onDestroy(() => {\n      previouslyFocused.focus();\n    });\n  }\n</script>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  .modal {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n<div class=\"modal-background\" on:click={dispatchClose} />\n\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\" bind:this={modal}>\n  <slot />\n</div>\n","import { getFetchHeaders } from '../Components/Token/Token.svelte';\n\nlet lastRequest = ''\n\nexport async function findUsers(value) {\n\tif(value.length > 0 && lastRequest !== value){\n\t\tlastRequest = value\n\t\tconst res = await fetch(`https://api.github.com/search/users?q=${value}`, {\n\t\t\theaders: getFetchHeaders(),\n\t\t}).then(_ => _.json())\n\t\tconst users = res.items.map(_ => _.login).splice(0, 10)\n\t\t\n\t\tconst fullResult = Promise.all(\n\t\t\tusers.map(\n\t\t\t\tlogin => fetch(`https://api.github.com/users/${login}`, {\n\t\t\t\t\theaders: getFetchHeaders(),\n\t\t\t\t}).then(_ => _.json())\n\t\t\t)\n\t\t).then(items => items.map(\n\t\t\t_ => ({\n\t\t\t\tkey: _.login,\n\t\t\t\tvalue: {\n\t\t\t\t\tname: _.name,\n\t\t\t\t\timage: _.avatar_url,\n\t\t\t\t\tfollowers: _.followers,\n\t\t\t\t\tfollowing: _.following,\n\t\t\t\t}\n\t\t\t}))\n\t\t)\n\t\t\n\t\treturn fullResult\n\t}else {\n\t\treturn [{\n\t\t\tkey: 'Tornek',\n\t\t\tvalue: {\n\t\t\t\tname: 'Lavrov',\n\t\t\t\timage: 'https://avatars2.githubusercontent.com/u/8150361?s=460&u=e1dc5c1f77397fb16909d4b679732eeeeb50f9d6&v=4',\n\t\t\t\tfollowers: 1231,\n\t\t\t\tfollowing: 2345,\n\t\t\t}\n\t\t}]\n\t}\n}","<script>\n    import { AutoComplete } from '@brunnerh/autocomplete';\n    import Content from './Components/Content/Content.svelte';\n    import Token from './Components/Token/Token.svelte';\n    import ListUser from './Components/ListUser/ListUser.svelte';\n\timport Modal from \"modal-overlay\";\n    import { findUsers } from './Services/findUsers'\n    import { getUserRepositories } from './Services/getUserRepositories'\n\t\n    const modal = {\n    \tdisplay: false,\n    \tcloseModal: () => {\n            modal.display = false\n        },\n    \topenModal: () => {\n            modal.display = true\n        },\n        content: '',\n        header: 'Error'\n    }\n    let selectedUser\n    \n    async function getItem() {\n    \treturn findUsers(document.getElementById('username').value)\n    }\n    async function onSelected({detail}) {\n    \tselectedUser = detail\n        const result = await getUserRepositories(detail.key)\n        \n        if(result.success){\n            modal.header = false\n            modal.content = `<ol>${result.data.map((repo) => {\n            \treturn `<li>\n\t<a href=\"${repo.html_url}\" target=\"_blank\"><b>${repo.name}</b> ${repo.language ? '(' + repo.language + ')' : ''}</a>\n\t<div>${repo.description || ''}</div>\n\t<div>\n\t\t<b>Created at: </b> ${new Date(Date.parse(repo.created_at)).toLocaleDateString()}\n\t\t<b>Updated at: </b> ${new Date(Date.parse(repo.updated_at)).toLocaleDateString()}\n\t</div>\n\t<div><b>forks:</b> ${repo.forks}</div>\n\t<div><b>watchers:</b> ${repo.watchers}</div>\n</li>`\n            }).join('')}</ol>`\n        } else {\n\t\t\tmodal.header = 'Error'\n\t\t\tmodal.content = `User ${detail.key} not found`\n        }\n        modal.openModal()\n    }\n</script> \n \n<Content>\n\t<Token />\n\t<div class=\"searchbar\">\n\t\t<label class=\"searchbar__input\">\n\t        Github username\n\t        <AutoComplete \n\t\t        id=\"username\" \n\t\t        placeholder=\"Tornek\"\n\t\t        debounce=\"500\"\n\t\t        items={getItem}\n\t\t        on:item-selected={onSelected}\n\t\t        let:result\n\t        >\n\t\t        <!-- Renders item with index prefix and value in parentheses on a second line. -->\n                <div slot=\"template\">\n                    {result.index + 1}. {@html result.label}\n                    <ListUser result={result} />\n                </div>\n            </AutoComplete>\n\t    </label>\n    </div>\n</Content>\n{#if modal.display}\n\t<Modal on:close=\"{modal.closeModal}\">\n\t\t{#if modal.header}\n\t\t\t<div class=\"modal__header\">{@html modal.header}</div>\n\t\t{:else}\n\t\t\t<div class=\"modal__header\"><ListUser result={selectedUser} /></div>\n\t\t{/if}\n\t\t{#if modal.content}\n\t\t\t{@html modal.content}\n\t\t{/if}\n\t</Modal>\n{/if}\n\n<style>\n.searchbar {\n\tdisplay: flex;\n\tflex-direction: row;\n}\n.searchbar :global(#username) {\n    padding: 0.4em 1em; \n}\n.searchbar {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: flex-end;\n}\n.searchbar__input {\n    flex: 1 1 auto;\n    padding-right: 2px;\n}\n.modal__header {\n\tfont-size: 1.6em;\n\tpadding-bottom: 15px;\n\tmargin-bottom: 15px;\n\tborder-bottom: 1px solid #8e8a8a;\n}\n</style>","import {getFetchHeaders} from '../Components/Token/Token.svelte';\n\nexport async function getUserRepositories(value){\n\tconst res = await fetch(`https://api.github.com/users/${value}/repos`, {\n\t\theaders: getFetchHeaders(),\n\t}).then(_ => _.json())\n\t\n\tif(res.message) {\n\t\treturn {\n\t\t\tsuccess: false\n\t\t}\n\t}else {\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tdata: res\n\t\t}\n\t}\n}","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","HtmlTag","[object Object]","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","d","current_component","set_current_component","component","get_current_component","Error","onDestroy","$$","on_destroy","push","createEventDispatcher","type","detail","callbacks","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","key","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","fill","make_dirty","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","index","indexOf","splice","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","label","viewport","condition","isOpen","dropdown","results","stopPropagation","dispatch","regExpEscape","s","replace","htmlEscape","charCodeAt","id","className","placeholder","title","required","disabled","tabindex","autoScroll","autoScrollCursor","items","search","isLoading","cursor","cursorItem","maxItems","fromStart","caseSensitive","minChar","debounce","blindSelection","lazyDropdown","searchRegEx","searchFunction","inputFocused","dropdownElement","hasSearched","resultListItems","debounceHandle","clearTimeout","defaultSearch","query","regex","effectiveSearchRegEx","highlights","match","matchCount","exec","global","matches","queueQuery","setTimeout","runQuery","open","loadedItems","matcher","effectiveSearchFunction","item","filterResults","activate","onItemClick","select","close","searchFlags","q","RegExp","lastHighlightEnd","parts","start","end","head","substring","highlightText","highlight","tail","join","preventDefault","scrollFunction","Element","prototype","scrollIntoViewIfNeeded","scrollIntoView","dropdownNode","viewportNode","nodeRect","getBoundingClientRect","viewportRect","top","scrollTop","offsetTop","bottom","clientHeight","height","getFetchHeaders","password","getElementById","headers","Headers","followers","following","image","result","modal","previouslyFocused","activeElement","focus","querySelectorAll","tabbable","tabIndex","shiftKey","lastRequest","closeModal","header","content","display","openModal","selectedUser","async","users","fetch","_","json","login","all","avatar_url","findUsers","res","message","success","getUserRepositories","repo","html_url","language","description","Date","parse","created_at","toLocaleDateString","updated_at","forks","watchers","body"],"mappings":"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"}